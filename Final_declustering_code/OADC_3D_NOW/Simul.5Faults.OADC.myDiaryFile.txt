
%% ********************** Set Parameters ************************************
%   Fault length scale for random faults. Will be between 0 and fscale in km
fscale=50.0;
%   Convergence tolerance value for the clustering algorithm in
%   'faultcluster'.  Represents the smallest change in global variance with
%   hypocenter clustering iteration.  The clustering process will stop once
%   the change in global variance with iteration drops to this value or
%   smaller.
con_tol=0.01;  %  units usually in km
PLOT_FLAG1=1; % =0, no intermediate loop plots of data and planes

%***************** Read Catalog of Hypocenters ****************************
read_catalog(infile,simul_tag);
help view
 <strong>view</strong>   3-D graph viewpoint specification.
    <strong>view</strong>(AZ,EL) and <strong>view</strong>([AZ,EL]) set the angle of the view from which an
    observer sees the current 3-D plot.  AZ is the azimuth or horizontal
    rotation and EL is the vertical elevation (both in degrees). Azimuth
    revolves about the z-axis, with positive values indicating counter-
    clockwise rotation of the viewpoint. Positive values of elevation
    correspond to moving above the object; negative values move below.
    <strong>view</strong>([X Y Z]) sets the view angle in Cartesian coordinates. The
    magnitude of vector X,Y,Z is ignored.
 
    Here are some examples:
 
    AZ = -37.5, EL = 30 is the default 3-D view.
    AZ = 0, EL = 90 is directly overhead and the default 2-D view.
 
    <strong>view</strong>(2) sets the default 2-D view, AZ = 0, EL = 90.
    <strong>view</strong>(3) sets the default 3-D view, AZ = -37.5, EL = 30.
 
    [AZ,EL] = <strong>view</strong> returns the current azimuth and elevation.
 
    <strong>view</strong>(AX,...) uses axes AX instead of the current axes.
 
    See also <a href="matlab:help viewmtx">viewmtx</a>.

    <a href="matlab:doc view">Reference page for view</a>
    <a href="matlab:matlab.internal.language.introspective.overloads.displayOverloads('view')">Other functions named view</a>

view(2)
view(3)
view(-37.5,30)
view(0,30)
view(35,30)
view(35,30)
view(325,30)
view(325,60)
view(325,10)
view(325,20)
view(325,40)
view(325,50)
view(325,80)
view(235,80)
view(235,40)
view(235,60)
view(23,60)
view(35,60)
[AZ,EL] = view

AZ =

  -51.0000


EL =

   26.0000

360*90

ans =

       32400

[AZ,EL] = view

AZ =

  -24.6000


EL =

  -65.2000

[AZ,EL] = view

AZ =

  -92.6000


EL =

    0.4000

360*180

ans =

       64800

pi

ans =

    3.1416

15*15

ans =

   225

225-29

ans =

   196

sqrt(196)

ans =

    14

196+29

ans =

   225

clear all; close all; clc;

x = [3 8];
y = [4 6];
z = [5 19];

plot3(x,y,z,'r')
clear all; close all; clc;

x = [3 8];
y = [4 6];
z = [5 19];

plot3(x,y,z,'r');
grid MINOR
clear all; close all; clc;

x = [3 8];
y = [4 6];
z = [5 19];

plot3(x,y,z,'r');
xlim([0 10])
ylim([0 10])
zlim([0 25])
grid MINOR
datacursormode on
clear all; close all; clc;

x = [3 8];
y = [4 6];
z = [5 19];

plot3(x,y,z,'r');
xlim([0 10])
ylim([0 10])
zlim([0 25])

hold on;
plot3(1,1,0,'g'); hold on;

grid MINOR
zlim([0 25])

hold on;
plot3(1,1,0,'go'); hold on;

grid MINOR
clear all; close all; clc;

x = [3 8];
y = [4 6];
z = [5 19];

plot3(x,y,z,'r');
xlim([0 10])
ylim([0 10])
zlim([0 25])

hold on;
plot3(1,1,0,'go'); hold on;
plot3(1,1,10,'bo'); hold on;
plot3(6,5,10,'go'); hold on;
plot3(6,5,20,'bo'); hold on;
plot3(10,9,10,'go'); hold on;
plot3(10,9,25,'bo'); hold on;
grid MINOR
sqrt(200)

ans =

   14.1421

14.1421^2

ans =

  199.9990

(14.1421^2)+25

ans =

  224.9990

sqrt((14.1421^2)+25)

ans =

   15.0000

clear all; close all; clc;

x = [3 8];
y = [4 18.1421];

plot3(x,y,'r');
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('plot3')" style="font-weight:bold">plot3</a>
Invalid third data argument
} 
clear all; close all; clc;

x = [3 8];
y = [4 18.1421];

plot(x,y,'r');
xlim([0 10])
ylim([0 10])
clear all; close all; clc;

x = [3 8];
y = [4 18.1421];

plot(x,y,'r');
xlim([0 10])
ylim([0 20])
clear all; close all; clc;

x = [3 8];
y = [4 18.1421];

plot(x,y,'r');
xlim([0 15])
ylim([0 25])
clear all; close all; clc;

x = [3 8];
y = [4 18.1421];

plot(x,y,'r');
xlim([0 15])
ylim([0 25])
grid MINOR
clear all; close all; clc;

x = [3 8];
y = [4 18.1421];

plot(x,y,'r');
xlim([0 15])
ylim([0 25])
grid MINOR

hold on;
plot3(2,1,'go'); hold on;
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('plot3')" style="font-weight:bold">plot3</a>
Invalid third data argument
} 
clear all; close all; clc;

x = [3 8];
y = [4 18.1421];

plot(x,y,'r');
xlim([0 15])
ylim([0 25])
grid MINOR

hold on;
plot(2,1,'go'); hold on;
plot(0,5,'bo'); hold on;
plot(7,5,'go'); hold on;
plot(5,18,'bo'); hold on;
plot(11,18,'go'); hold on;
plot(8,23,'bo'); hold on;
grid MINOR
clear all; close all; clc;

x = [3 8];
y = [4 18.1421];

plot(x,y,'r');
xlim([0 15])
ylim([0 25])
grid MINOR

hold on;
plot(3,1,'go'); hold on;
plot(0,5,'bo'); hold on;
plot(7,5,'go'); hold on;
plot(5,18,'bo'); hold on;
plot(11,18,'go'); hold on;
plot(8,23,'bo'); hold on;
grid MINOR
clear all; close all; clc;

x = [3 8];
y = [4 18.1421];

plot(x,y,'r');
xlim([0 15])
ylim([0 25])
grid MINOR

hold on;
plot(3,1,'go'); hold on;
plot(0,5,'bo'); hold on;
plot(7,5,'go'); hold on;
plot(5,18,'bo'); hold on;
plot(11,18,'go'); hold on;
plot(8,23,'bo'); hold on;
grid MINOR


x = [3 7 11 8 5 0];
y = [1 5 18 23 18 5];

plot(x,y,'ro')
sqrt(9+0.1421^2)

ans =

    3.0034

a = [3 4 1; 7 5 1; 8 18.1421 1]

a =

    3.0000    4.0000    1.0000
    7.0000    5.0000    1.0000
    8.0000   18.1421    1.0000

det(a)

ans =

   51.5684

det(a)/15

ans =

    3.4379

a = [3 4 1; 8 18.1421 1; 7 5 1]

a =

    3.0000    4.0000    1.0000
    8.0000   18.1421    1.0000
    7.0000    5.0000    1.0000

det(a)/15

ans =

   -3.4379

a = [3 4 1; 8 18.1421 1; 5 18 1]

a =

    3.0000    4.0000    1.0000
    8.0000   18.1421    1.0000
    5.0000   18.0000    1.0000

det(a)/15

ans =

    2.7811

xs = [3 7 11 8 5 0];
ys = [1 5 18 23 18 5];

plot(xs,ys,'ro')

k=1;
% Choose hypocenter vector
u=[xs(k) ys(k);xs(k) ys(k)];
u1=[xs(k) ys(k) zs(k)];
{Undefined function or variable 'zs'.
} 
xs = [3 7 11 8 5 0];
ys = [1 5 18 23 18 5];

plot(xs,ys,'ro')

k=1;
% Choose hypocenter vector
u=[xs(k) ys(k);xs(k) ys(k)];
u1=[xs(k) ys(k)];
u

u =

     3     1
     3     1

u1

u1 =

     3     1

v=[ xv' yv']
{Undefined function or variable 'xv'.
} 
xv = [3 8];
yv = [4 18.1421];
% Construct vertices vector
v=[ xv' yv']

v =

    3.0000    4.0000
    8.0000   18.1421

d=u-v

d =

         0   -3.0000
   -5.0000  -17.1421

clear all; close all; clc;

x = [3 8];
y = [4 18.1421];

plot(x,y,'r');
xlim([0 15])
ylim([0 25])
grid MINOR

hold on;
plot(3,1,'go'); hold on;
plot(0,5,'bo'); hold on;
plot(7,5,'go'); hold on;
plot(5,18,'bo'); hold on;
plot(11,18,'go'); hold on;
plot(8,23,'bo'); hold on;
grid MINOR


xs = [3 7 11 8 5 0];
ys = [1 5 18 23 18 5];

xv = [3 8];
yv = [4 18.1421];

plot(xs,ys,'ro')

k=1;
% Choose hypocenter vector
u=[xs(k) ys(k);xs(k) ys(k)];
u1=[xs(k) ys(k)];


% Construct vertices vector
v=[ xv' yv'];

% Construct distance vector from each vertex
d=u-v;
d1=[d(1,1) d(1,2)];
d2=[d(2,1) d(2,2)];

d1n=norm(d1);
d2n=norm(d2);

L1=15;

% Find all angles and perpendicular distances to edge
% 12 Face
%gam12=acos(d12./(d1n.*d2n))
[alph12,beta12,gam12]=trisol(d2n,d1n,L1,'r');
a12=d1n.*d2n.*sin(gam12)./L1;
clear all; close all; clc;

x = [3 8];
y = [4 18.1421];

plot(x,y,'r');
xlim([0 15])
ylim([0 25])
grid MINOR

hold on;
plot(3,1,'go'); hold on;
plot(0,5,'bo'); hold on;
plot(7,5,'go'); hold on;
plot(5,18,'bo'); hold on;
plot(11,18,'go'); hold on;
plot(8,23,'bo'); hold on;
grid MINOR


xs = [3 7 11 8 5 0];
ys = [1 5 18 23 18 5];

xv = [3 8];
yv = [4 18.1421];

plot(xs,ys,'ro')

k=1;
% Choose hypocenter vector
u=[xs(k) ys(k);xs(k) ys(k)];
u1=[xs(k) ys(k)];


% Construct vertices vector
v=[ xv' yv'];

% Construct distance vector from each vertex
d=u-v;
d1=[d(1,1) d(1,2)];
d2=[d(2,1) d(2,2)];

d1n=norm(d1);
d2n=norm(d2);

L1=15;

% Find all angles and perpendicular distances to edge
% 12 Face
%gam12=acos(d12./(d1n.*d2n))
[alph12,beta12,gam12]=trisol(d2n,d1n,L1,'r');
a12=d1n.*d2n.*sin(gam12)./L1;



% Find the position field for the hypocenter relative to the plane and find
% the minimum distance.
p2=pi/2.0;
dmin=dperp;
{Undefined function or variable 'dperp'.
} 
clear all; close all; clc;

x = [3 8];
y = [4 18.1421];

plot(x,y,'r');
xlim([0 15])
ylim([0 25])
grid MINOR

hold on;
plot(3,1,'go'); hold on;
plot(0,5,'bo'); hold on;
plot(7,5,'go'); hold on;
plot(5,18,'bo'); hold on;
plot(11,18,'go'); hold on;
plot(8,23,'bo'); hold on;
grid MINOR


xs = [3 7 11 8 5 0];
ys = [1 5 18 23 18 5];

xv = [3 8];
yv = [4 18.1421];

plot(xs,ys,'ro')

k=1;
% Choose hypocenter vector
u=[xs(k) ys(k);xs(k) ys(k)];
u1=[xs(k) ys(k)];


% Construct vertices vector
v=[ xv' yv'];

% Construct distance vector from each vertex
d=u-v;
d1=[d(1,1) d(1,2)];
d2=[d(2,1) d(2,2)];

d1n=norm(d1);
d2n=norm(d2);

L1=15;

% Find all angles and perpendicular distances to edge
% 12 Face
%gam12=acos(d12./(d1n.*d2n))
[alph12,beta12,gam12]=trisol(d2n,d1n,L1,'r');
a12=d1n.*d2n.*sin(gam12)./L1;



% Find the position field for the hypocenter relative to the plane and find
% the minimum distance.
p2=pi/2.0;
dmin=0;

if (alph12 > p2); dmin=d1n; end
if (beta12 > p2); dmin=d2n; end
clear all; close all; clc;

x = [3 8];
y = [4 18.1421];

plot(x,y,'r');
xlim([0 15])
ylim([0 25])
grid MINOR

hold on;
plot(3,1,'go'); hold on;
plot(0,5,'bo'); hold on;
plot(7,5,'go'); hold on;
plot(5,18,'bo'); hold on;
plot(11,18,'go'); hold on;
plot(8,23,'bo'); hold on;
grid MINOR


xs = [3 7 11 8 5 0];
ys = [1 5 18 23 18 5];

xv = [3 8];
yv = [4 18.1421];

plot(xs,ys,'ro')

k=1;
% Choose hypocenter vector
u=[xs(k) ys(k);xs(k) ys(k)];
u1=[xs(k) ys(k)];


% Construct vertices vector
v=[ xv' yv'];

% Construct distance vector from each vertex
d=u-v;
d1=[d(1,1) d(1,2)];
d2=[d(2,1) d(2,2)];

d1n=norm(d1);
d2n=norm(d2);

L1=15;

% Find all angles and perpendicular distances to edge
% 12 Face
%gam12=acos(d12./(d1n.*d2n))
[alph12,beta12,gam12]=trisol(d2n,d1n,L1,'r');
a12=d1n.*d2n.*sin(gam12)./L1;

% Find the position field for the hypocenter relative to the plane and find
% the minimum distance.
p2=pi/2.0;
dmin=0;

if (alph12 > p2); dmin=d1n; end
if (beta12 > p2); dmin=d2n; end

dmin;
dmin

dmin =

     3

clear all; close all; clc;

x = [3 8];
y = [4 18.1421];

plot(x,y,'r');
xlim([0 15])
ylim([0 25])
grid MINOR

hold on;
plot(3,1,'go'); hold on;
plot(0,5,'bo'); hold on;
plot(7,5,'go'); hold on;
plot(5,18,'bo'); hold on;
plot(11,18,'go'); hold on;
plot(8,23,'bo'); hold on;
grid MINOR


xs = [3 7 11 8 5 0];
ys = [1 5 18 23 18 5];

xv = [3 8];
yv = [4 18.1421];

plot(xs,ys,'ro')

k=6;
% Choose hypocenter vector
u=[xs(k) ys(k);xs(k) ys(k)];
u1=[xs(k) ys(k)];


% Construct vertices vector
v=[ xv' yv'];

% Construct distance vector from each vertex
d=u-v;
d1=[d(1,1) d(1,2)];
d2=[d(2,1) d(2,2)];

d1n=norm(d1);
d2n=norm(d2);

L1=15;

% Find all angles and perpendicular distances to edge
% 12 Face
%gam12=acos(d12./(d1n.*d2n))
[alph12,beta12,gam12]=trisol(d2n,d1n,L1,'r');
a12=d1n.*d2n.*sin(gam12)./L1;

% Find the position field for the hypocenter relative to the plane and find
% the minimum distance.
p2=pi/2.0;
dmin=0;

if (alph12 > p2); dmin=d1n; end
if (beta12 > p2); dmin=d2n; end

dmin

dmin =

    3.1623

sqrt(10)

ans =

    3.1623

clear all; close all; clc;

x = [3 8];
y = [4 18.1421];

plot(x,y,'r');
xlim([0 15])
ylim([0 25])
grid MINOR

hold on;
plot(3,1,'go'); hold on;
plot(0,5,'bo'); hold on;
plot(7,5,'go'); hold on;
plot(5,18,'bo'); hold on;
plot(11,18,'go'); hold on;
plot(8,23,'bo'); hold on;
grid MINOR


xs = [3 7 11 8 5 0];
ys = [1 5 18 23 18 5];

xv = [3 8];
yv = [4 18.1421];

plot(xs,ys,'ro')

k=3;
% Choose hypocenter vector
u=[xs(k) ys(k);xs(k) ys(k)];
u1=[xs(k) ys(k)];


% Construct vertices vector
v=[ xv' yv'];

% Construct distance vector from each vertex
d=u-v;
d1=[d(1,1) d(1,2)];
d2=[d(2,1) d(2,2)];

d1n=norm(d1);
d2n=norm(d2);

L1=15;

% Find all angles and perpendicular distances to edge
% 12 Face
%gam12=acos(d12./(d1n.*d2n))
[alph12,beta12,gam12]=trisol(d2n,d1n,L1,'r');
a12=d1n.*d2n.*sin(gam12)./L1;

% Find the position field for the hypocenter relative to the plane and find
% the minimum distance.
p2=pi/2.0;
dmin=0;

if (alph12 > p2); dmin=d1n; end
if (beta12 > p2); dmin=d2n; end

dmin

dmin =

    3.0034

clear all; close all; clc;

x = [3 8];
y = [4 18.1421];

plot(x,y,'r');
xlim([0 15])
ylim([0 25])
grid MINOR

hold on;
plot(3,1,'go'); hold on;
plot(0,5,'bo'); hold on;
plot(7,5,'go'); hold on;
plot(5,18,'bo'); hold on;
plot(11,18,'go'); hold on;
plot(8,23,'bo'); hold on;
grid MINOR


xs = [3 7 11 8 5 0];
ys = [1 5 18 23 18 5];

xv = [3 8];
yv = [4 18.1421];

plot(xs,ys,'ro')

k=4;
% Choose hypocenter vector
u=[xs(k) ys(k);xs(k) ys(k)];
u1=[xs(k) ys(k)];


% Construct vertices vector
v=[ xv' yv'];

% Construct distance vector from each vertex
d=u-v;
d1=[d(1,1) d(1,2)];
d2=[d(2,1) d(2,2)];

d1n=norm(d1);
d2n=norm(d2);

L1=15;

% Find all angles and perpendicular distances to edge
% 12 Face
%gam12=acos(d12./(d1n.*d2n))
[alph12,beta12,gam12]=trisol(d2n,d1n,L1,'r');
a12=d1n.*d2n.*sin(gam12)./L1;

% Find the position field for the hypocenter relative to the plane and find
% the minimum distance.
p2=pi/2.0;
dmin=0;

if (alph12 > p2); dmin=d1n; end
if (beta12 > p2); dmin=d2n; end

dmin

dmin =

    4.8579

23-18.1421

ans =

    4.8579

Cxy=cov( [xv' yv'],0);
% compute the covariance matrix for this cluster
    Cxy=cov( [xv' yv'],0);
    % compute the eigenvalues and eigenvectors for this cluster
    [V,D]=eig(Cxy);
D

D =

   -0.0000         0
         0  112.4995

sqrt(112.5)

ans =

   10.6066

vec_plane(k,1:3)=V(1:3,1);
{Index exceeds matrix dimensions.
} 
vec_plane(k,1:3)=V(1:2,1);
{Subscripted assignment dimension mismatch.
} 
V

V =

   -0.9428    0.3333
    0.3333    0.9428

V(1:2,1);
V(1:2,1)

ans =

   -0.9428
    0.3333

xv

xv =

     3     8

   % compute the covariance matrix for this cluster
    Cxy=cov( [xv' yv'],0);
    % compute the eigenvalues and eigenvectors for this cluster
    [V,D]=eig(Cxy);
    
    % save the plane unit normal vector and eigenvalue
    vec_plane(k,1:3)=V(1:2,1);
{Subscripted assignment dimension mismatch.
} 
vec(1:2)=vec_plane(1:2);
{Undefined function or variable 'vec_plane'.
} 
clear all; close all; clc;

x = [3 8];
y = [4 18.1421];

plot(x,y,'r');
xlim([0 15])
ylim([0 25])
grid MINOR

hold on;
plot(3,1,'go'); hold on;
plot(0,5,'bo'); hold on;
plot(7,5,'go'); hold on;
plot(5,18,'bo'); hold on;
plot(11,18,'go'); hold on;
plot(8,23,'bo'); hold on;
grid MINOR


xs = [3 7 11 8 5 0];
ys = [1 5 18 23 18 5];

xv = [3 8];
yv = [4 18.1421];

plot(xs,ys,'ro')

k=4;
% Choose hypocenter vector
u=[xs(k) ys(k);xs(k) ys(k)];
u1=[xs(k) ys(k)];


% Construct vertices vector
v=[ xv' yv'];

% Construct distance vector from each vertex
d=u-v;
d1=[d(1,1) d(1,2)];
d2=[d(2,1) d(2,2)];

d1n=norm(d1);
d2n=norm(d2);

L1=15;

% Find all angles and perpendicular distances to edge
% 12 Face
%gam12=acos(d12./(d1n.*d2n))
[alph12,beta12,gam12]=trisol(d2n,d1n,L1,'r');
a12=d1n.*d2n.*sin(gam12)./L1;

    % compute the covariance matrix for this cluster
    Cxy=cov( [xv' yv'],0);
    % compute the eigenvalues and eigenvectors for this cluster
    [V,D]=eig(Cxy);
    
    % save the plane unit normal vector and eigenvalue
    vec_plane(1:2)=V(1:2,1);
    
   xb = mean(xv);
   yb = mean(yv);
   
    % Find the perpendicular distance to the infinite plane
vec(1:2)=vec_plane(1:2);
u2=u1-[xb yb];
dperp=abs(dot(u2,vec));


% Find the position field for the hypocenter relative to the plane and find
% the minimum distance.
p2=pi/2.0;
dmin=dperp;

if (alph12 > p2); dmin=d1n; end
if (beta12 > p2); dmin=d2n; end

dmin

dmin =

    4.8579

clear all; close all; clc;

x = [3 8];
y = [4 18.1421];

plot(x,y,'r');
xlim([0 15])
ylim([0 25])
grid MINOR

hold on;
plot(3,1,'go'); hold on;
plot(0,5,'bo'); hold on;
plot(7,5,'go'); hold on;
plot(5,18,'bo'); hold on;
plot(11,18,'go'); hold on;
plot(8,23,'bo'); hold on;
grid MINOR


xs = [3 7 11 8 5 0];
ys = [1 5 18 23 18 5];

xv = [3 8];
yv = [4 18.1421];

plot(xs,ys,'ro')

k=2;
% Choose hypocenter vector
u=[xs(k) ys(k);xs(k) ys(k)];
u1=[xs(k) ys(k)];


% Construct vertices vector
v=[ xv' 