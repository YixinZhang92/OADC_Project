
%% ********************** Set Parameters ************************************
%   Fault length scale for random faults. Will be between 0 and fscale in km
fscale=20.0;
%   Convergence tolerance value for the clustering algorithm in
%   'faultcluster'.  Represents the smallest change in global variance with
%   hypocenter clustering iteration.  The clustering process will stop once
%   the change in global variance with iteration drops to this value or
%   smaller.
con_tol=0.01;  %  units usually in km
PLOT_FLAG1=1; % =0, no intermediate loop plots of data and planes

%***************** Read Catalog of Hypocenters ****************************
read_catalog_2D(infile,simul_tag);

%********************** Initialize Space **********************************
init_space_2D(kmax);

%******************* Initialize random faults *****************************
FAULT_FLAG=0;   % Initialization, use all hypocenters

%initial_faults_using_kmeans_2D(kmin);
randfaults_2D(kmin,FAULT_FLAG);

%  plot initial planes
picname='Initial Model';
datplot_2D(xs,ys,kmin,xv,yv,picname,simul_tag);

SOL_FLAG=0;
Kfaults=kmin;
if use_glo_var == 1
        
        JFINAL=faultcluster_2D(con_tol,Kfaults)
    else
        
        JFINAL=Copy_of_faultcluster_2D(con_tol,Kfaults)
    end

JFINAL =

    1.7203

    Kfaults;
     Nt(1:Kfaults);

    %  plot initial planes
    if PLOT_FLAG1 == 1
        picname=strcat('Iteration',num2str(Kfaults),'Model');
        %datplot(xs,ys,zs,Kfaults,xv,yv,zv,picname,simul_tag);
        datplot_2D(xs,ys,Kfaults,xv,yv,picname,simul_tag);
    end
testing_projections_now
%function OADC_3D(kmin,kmax,err_av,N_loop,infile,simul_tag,use_glo_var)
%,FM_file,dist2FM_threshold
%  Implementation of 3-D Optimal Anisotropic Dynamic Clustering from

%  Ouillon, Ducorbier, and Sornette (2008).  Automatic reconstruction of
%  fault networks from seismicity catalogs: Three-dimensional optimal
%  anisotropic dynamic clustering, JGR, 113, B01306,
%  doi:10.1029/2007JB00503.

%  specify:

%       kmin = starting number of fault planes
%       kmax = maximum number of fault planes analyzed
%       err_av = average hypocentral error in km
%       infile = file containing (x,y,z) positions of hypocenters

% <command execution_time="8810">OADC_3D(1,7,0.01,'testdata.txt')</command>
% <command execution_time="4459">OADC_3D(1,3,0.5,'testdata.txt')</command>
% <command execution_time="5385">OADC_3D(1,4,0.5,'testdata.txt')</command>

% Modified by Oluwaseun Idowu Fadugba (7/11/2019)
% 1.  Shuffled random seed generator at the start of the code.
% 2.  Number of times OADC_3D splits the thichest faults
% 3.  Simulation tag to copy all generated files and figures to a folder. Delete
%     folder with the same simulation tag i.e., previous runs with the same tag.
% 4.  Edited randfaults.m
% 5.  Edited read_catalog.m, datplot.m to included simul_tag, and save figures with 
%     the tag as the filename. He also included figure title and adjusted fontsize.
% 6.  Added maximum number of iteration in faultcluster.m in case the iteration is endless.
% 7.  Initialized xt, yt and zt variables in pcluster.m because it later becomes 
%     inconsistent with the total number of earthquakes in the catalog.       
% 8.  Changed the lambda3(k)=sqrt(12.*D(1,1)) to lambda3(k)=sqrt(D(1,1)) in recalcfault.m
% 9.  OADC_3D will split the thickest fault N_loop times to find the
%     configuration with the best fit.
% 10. OADC_3D now saves all variables to file in .mat format.
% 11. OADC_3D now prints the best 6 fault geometries, and print them to file.
% 12. Added FM_file, dist2FM_threshold, strike and dip, and some temporary variables 
%     associated with fault split to global variables in OADC_3D.m
% 13. Modified display in OADC_3D to show status bar.
% 14. OADC_3D can now find a stable fault geometry using lambda_3 in
%     addition to global variance, specify by the use_glo_var.
%     use_glo_var = 1; use global variance
%     use_glo_var = 2; use lambda_3
% 15. OADC_3D can now split the thickest fault using the focal mechanisms
%     of earthquakes, if given, instead of randomly-seeded planes.
% 16. Changed the equations for determining strike and dip accordingly for
%     strike to go from the north clockwisely.
% 17. Fixed a bug in dividing thick fault into two in randfaults_using_FM.m by moving the 
%     L/2 out of the k=1:n0 loop, and changed L2 to L22 cos there is another L2 later.
% 18. Checked if Cxy contains NaN. This happens if no hypocenter is close to
%     one of the thickest faults.
% 19  Save diary to file using "diary [simul_tag '.myDiaryFile.txt']"
% 20  Plot best 6 fault models and display their fault parameters.
% 21  OADC_3D do not allow faults without an earthquake.
% 22  Splitfault is now within a while loop, until we get N_loop geometries
%     with faults having dips greater than the specified dip_threshold.
% 23  Seun added hypos in cluster to the input parameters to fltplane.m
% 24  Seun changed the way to determine L and W of fault plane


% Try to resolve it in randfaults.m as well.
%
%
% Run by typing:
%               OADC_3D(1,3,0.5,10,'testdata.txt','Simul.1',2)
%               OADC_3D(1,2,1,10,'COLCUM.20F_hypos.txt','Test.1',2)
%
%               OADC_3D(1,2,1,10,'COLCUM.20F_hypos.txt','Test.1',2,'FM_dataset.csv',1)

close all; clc; clear all;
tic

global xc yc vec_plane xb_old yb_old xs ys N Nc
global xt yt zt Nt xb yb lambda3
global L xv yv L_old xv_old yv_old  fscale
global Strike FM_file dist2FM_threshold dip_threshold
global xb_tmp_i yb_tmp_i 
global xv_tmp_i yv_tmp_i 
global xt_tmp_i yt_tmp_i
global vec_plane_tmp_i 
global Nt_tmp_i lambda3_tmp_i
global L_tmp_i Strike_tmp_i
global index use_glo_var con_tol Kfaults kmin

kmin = 1; kmax=1; err_av=0.2;
N_loop = 3; simul_tag = 'Syn.1ty.OADC2D'; use_glo_var = 2;
FM_file='FM_dataset.csv'; dist2FM_threshold = 1; dip_threshold = 10;
%infile = 'proj.40.25.txt';
%infile = 'proj.40.65.txt';
%infile = 'ALL_hypos.proj.30.30.txt';
infile = 'randhypos.2D.simul.1.txt';

rng('shuffle');

% remove previous simulations with the same simul_tag
eval(sprintf('%s%s%s %s','! rm -rf ',simul_tag, '*', '*~'))

% Save diary
diaryname = [simul_tag '.myDiaryFile.txt'];
diary(diaryname)
